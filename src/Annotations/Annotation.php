<?php
/**
 *
 * The content is generated by using TextMate, and edited by yuhari.
 *
 *
 * 自定义注释 基类
 *
 *
 * @author 	   yuhari
 * @maintainer yuhari
 * @version    1.0.0
 * @modified   2019/08/12 12:59:50
 *
 */
namespace Util\Annotations ;

use Util\Exceptions\AnnotationException ;

class Annotation implements IAnnotation {
	
	protected $marker ;
	
	protected $_target ;
	
	protected $_target_args ;
	
	// 注释类或方法对应的参数
	public function setTargetArgs($args) {
		$this->_target_args = $args ;
	}
	
	public function getTargetArgs() {
		return $this->_target_args ;
	}
	
	public function setTarget($target) {
		$this->_target = $target ;
	}
	
	public function getTarget() {
		return $this->_target ;
	}
	
	public function setMarker($callable) : void {
		if (is_callable($callable)) {
			$this->marker = $callable ;
		} else {
			throw new AnnotationException("the annotation marker is not valid.") ;
		}
	}
	
	public function mark() : void {
		if ($func = $this->marker) {
			try {
				call_user_func_array($this->marker, [$this]) ;
			}catch(\Exception $e) {
				throw new AnnotationException($e->getMessage()) ;
			}
		}
	}
}
