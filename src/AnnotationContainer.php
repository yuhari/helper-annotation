<?php
/**
 *
 * The content is generated by using TextMate, and edited by yuhari.
 *
 *
 * 注释容器，避免多次创建
 *
 *
 * @author 	   yuhari
 * @maintainer yuhari
 * @version    1.0.0
 * @modified   2019/08/12 14:18:45
 *
 */
namespace Util ;

use Util\Exceptions\AnnotationContainerException ;
use Util\Annotations\Annotation ;

class AnnotationContainer {
	
	protected $object_list = [] ;
	
	// set object
	public function set($name, Annotation $object) {
		
		if (isset($this->object_list[$name])) {
			throw new AnnotationContainerException("the key `$name` is duplicate definition in container.") ;
		}
		
		$this->object_list[$name] = $object ;
	}
	
	// get object
	public function get($name) {
		
		if (!isset($this->object_list[$name])) {
			if (class_exists($name, false) && ($c = new $name) instanceof Annotation) {
				$this->set($name, $c) ;
			} else {
				throw new AnnotationContainerException("the key `$name` is not a valid annotation class.") ;
			}
		}
		
		return clone $this->object_list[$name] ;
	} 
}
